import {
    Component,
    OnInit,
    ViewChild,
    Inject,
    PLATFORM_ID,
} from '@angular/core';
import { WebSocketService } from '../core/service/web-socket.service';
import { NgTerminal } from 'ng-terminal';
import {
    WebSocketOutgoingEvent,
    WebSocketIncomingEvent,
} from '../core/models/web-socket.model';
import { isPlatformBrowser } from '@angular/common';
import { takeWhile, pluck, map, tap } from 'rxjs/operators';

@Component({
    selector: 'app-admin-loading',
    templateUrl: './admin.component.html',
    styleUrls: ['./admin.component.scss'],
})
export class AdminComponent implements OnInit {
    @ViewChild('term', { static: true }) child: NgTerminal;

    line: string[] = [];
    prompt = '$ ';
    ready = true;
    isLoggedIn = false;
    password: string;

    wrongCount = 0;
    constructor(
        private socket: WebSocketService,
        @Inject(PLATFORM_ID) private platformId: Object,
    ) {}

    ngOnInit() {
        this.socket.observable.subscribe(console.log);
        this.adminJoin$.subscribe(sucess => {
            this.ready = true;
            if (sucess) {
                this.isLoggedIn = true;
                this.println('Login successful');
                this.prompt = 'IQ180-admin$ ';
                this.wrongCount = 0;
            } else {
                if (this.wrongCount === 2) {
                    this.println('Bye, See you later');
                    window.location.href =
                        'https://www.youtube.com/watch?v=dQw4w9WgXcQ';
                } else {
                    this.wrongCount++;
                    this.println('Invalid password');
                }
            }
            this.writePrompt();
        });
        this.commandResult$.subscribe(message => {
            this.ready = true;
            this.println(message);
            this.writePrompt();
        });
    }

    get isBrowser() {
        return isPlatformBrowser(this.platformId);
    }
    ngAfterViewInit() {
        // this.invalidate();
        this.child.write(
            'Welcome to Admin console, type password to continue\r\n' +
                this.prompt,
        );
        this.child.keyEventInput.subscribe(e => {
            const ev = e.domEvent;
            const printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;
            if (this.ready) {
                if (ev.keyCode === 13) {
                    this.child.write('\r\n');
                    this.handleCommand(this.line.join(''));
                    this.line = [];
                } else if (ev.keyCode === 8) {
                    // Do not delete the prompt
                    if (this.child.underlying.buffer.cursorX > 2) {
                        this.child.write('\b \b');
                        this.line.pop();
                    }
                } else if (printable) {
                    this.child.write(this.isLoggedIn ? e.key : '*');
                    this.line.push(e.key);
                }
            }
        });
    }

    command(cmd: string) {
        this.socket.emit({
            event: WebSocketOutgoingEvent.command,
            data: cmd,
        });
    }

    writePrompt() {
        this.child.write(this.prompt);
    }

    playAudio() {
        const audio = new Audio();
        audio.src = '../assets/audio/explode.mp3';
        audio.load();
        //audio.loop = true;
        audio.play();
        //audio.pause();
    }

    reset() {
        this.command('RESET');
        this.playAudio();
    }

    async handleCommand(command: string) {
        this.ready = false;
        if (this.isLoggedIn) {
            const [cmd, ...args] = command.replace(/\s+/, ' ').split(' ');
            switch (cmd) {
                case 'reset':
                    this.reset();
                    break;
                case 'help':
                    this.println(`Available Commands`);
                    this.println('reset\t\t\t: Reset the game');
                    this.println('online\t\t\t: List online players');
                    this.println('players\t\t\t: List playing players');
                    this.println('clear\t\t\t: Clear Terminal');
                    this.ready = true;
                    this.writePrompt();
                    break;
                case 'clear':
                    this.child.underlying.clear();
                    this.ready = true;
                    this.writePrompt();
                    break;
                case 'online':
                    this.command('ONLINE');
                    break;
                case 'players':
                    this.command('PLAYERS');
                    break;
                case 'doge':
                    this.println(`           [49m             [38;5;179mâ–„â–„
\r                        [48;5;179m [48;5;172m [49m[38;5;172mâ–„                    [38;5;186mâ–„[38;5;179mâ–„[38;5;178mâ–„[38;5;172mâ–„
\r                        [48;5;179m [48;5;172m [48;5;136m [49mâ–„                 [38;5;187mâ–„[48;5;186m[38;5;179mâ–„[48;5;179m[38;5;142mâ–„[48;5;136m [38;5;130mâ–„[48;5;130m[38;5;94mâ–„[48;5;179m[38;5;136mâ–„[49m
\r                        [48;5;179m[38;5;178mâ–„[48;5;172m [48;5;136m[38;5;130mâ–„[48;5;172m [48;5;179m[38;5;172mâ–„[49m[38;5;179mâ–„              â–„[48;5;179m[38;5;136mâ–„[48;5;136m [48;5;137mâ–„[48;5;136m [48;5;130m   [49m
\r                       [38;5;179mâ–„[48;5;178m[38;5;136mâ–„[48;5;172m [48;5;136m[38;5;178mâ–„â–„[48;5;172mâ–„â–„[48;5;179mâ–„[49mâ–„â–„[38;5;179mâ–„â–„      [38;5;186mâ–„[38;5;172mâ–„[48;5;178m[38;5;136mâ–„[48;5;136m[38;5;130mâ–„ â–„[48;5;130m [48;5;94m  [48;5;130m  [49m
\r                      [38;5;179mâ–„[48;5;178mâ–„â–„[48;5;179m   [48;5;178m  [38;5;172mâ–„     [38;5;179mâ–„  [38;5;172mâ–„[48;5;172m[38;5;130mâ–„[38;5;136mâ–„[48;5;136m[38;5;130mâ–„[48;5;94m [48;5;130m[38;5;136mâ–„ [48;5;94m[38;5;52mâ–„[48;5;88m[38;5;233mâ–„[48;5;52mâ–„[48;5;88m[38;5;94mâ–„[48;5;130m  [49m
\r                    [38;5;179mâ–„[38;5;185mâ–„[48;5;179m [38;5;186mâ–„[48;5;186m [48;5;179mâ–„  [48;5;178m[38;5;172mâ–„[48;5;172m  [38;5;178mâ–„[48;5;178m  [48;5;179m â–„â–„[48;5;178m   [48;5;172mâ–„[48;5;130m[38;5;136mâ–„[48;5;88m[38;5;130mâ–„[48;5;130m [48;5;136m â–„[48;5;94m[38;5;232mâ–„[48;5;16m [48;5;233m[38;5;52mâ–„[48;5;94m[38;5;130mâ–„[48;5;136m [48;5;130m[38;5;136mâ–„[49m
\r                  [38;5;186mâ–„[48;5;186m [48;5;185mâ–„[48;5;179m  [48;5;186m   [48;5;179m [38;5;178mâ–„[48;5;172m[38;5;136mâ–„ [48;5;178m [38;5;179mâ–„â–„[48;5;179m  [48;5;142mâ–„[48;5;178mâ–„     [48;5;172mâ–„[48;5;130m[38;5;172mâ–„[38;5;94mâ–„[48;5;52m[38;5;16mâ–„[48;5;16m [38;5;52mâ–„[48;5;94m[38;5;136mâ–„[48;5;136m   [49m
\r                [38;5;186mâ–„[48;5;186m  [38;5;179mâ–„[48;5;179m[38;5;100mâ–„[48;5;186m[38;5;94mâ–„[48;5;180m[38;5;137mâ–„[38;5;179mâ–„[48;5;186m[38;5;180mâ–„[48;5;180m[38;5;179mâ–„[48;5;179m[38;5;178mâ–„[48;5;172m[38;5;136mâ–„[48;5;136m  [48;5;179m [38;5;186mâ–„[48;5;180m  [48;5;179m [48;5;143m[38;5;179mâ–„[48;5;136m  [48;5;178m[38;5;136mâ–„ [38;5;179mâ–„[48;5;179m  [48;5;178mâ–„[48;5;172m[38;5;178mâ–„[48;5;94mâ–„[38;5;136mâ–„[48;5;130mâ–„[48;5;136m [48;5;94m[38;5;130mâ–„[38;5;136mâ–„[49m[38;5;172mâ–„
\r              [38;5;186mâ–„[48;5;186m[38;5;223mâ–„[48;5;222m[38;5;224mâ–„[48;5;223m[38;5;230mâ–„[48;5;186m[38;5;187mâ–„[48;5;137m[38;5;144mâ–„[48;5;235m[38;5;233mâ–„[48;5;16m  [48;5;137m[38;5;136mâ–„[48;5;179m  [48;5;178m[38;5;179mâ–„[48;5;172mâ–„[48;5;136mâ–„[48;5;179m [48;5;180mâ–„  [38;5;143mâ–„[48;5;179m[38;5;137mâ–„  [48;5;172m[38;5;178mâ–„[38;5;136mâ–„[48;5;178m[38;5;172mâ–„ [38;5;179mâ–„[48;5;179m    [48;5;178mâ–„[48;5;172m[38;5;178mâ–„[48;5;136m [48;5;130m [38;5;88mâ–„[48;5;136m[38;5;130mâ–„[49m
\r              [48;5;186m[38;5;187mâ–„[48;5;224m[38;5;254mâ–„[48;5;254m [48;5;224m[38;5;223mâ–„[48;5;187m[38;5;186mâ–„[48;5;144m[38;5;137mâ–„[48;5;16m[38;5;58mâ–„â–„[38;5;179mâ–„[48;5;179m      [38;5;172mâ–„[38;5;136mâ–„[48;5;143m[38;5;52mâ–„[48;5;100m[38;5;232mâ–„[48;5;58m[38;5;244mâ–„[48;5;16m  [48;5;94m[38;5;16mâ–„[48;5;136m[38;5;94mâ–„[48;5;178m[38;5;136mâ–„ [38;5;179mâ–„[48;5;179m      [38;5;178mâ–„[48;5;178m [48;5;130m[38;5;172mâ–„[48;5;88m[38;5;130mâ–„[48;5;130m [48;5;178m[38;5;172mâ–„[49m
\r             [48;5;187m [48;5;223m[38;5;224mâ–„[48;5;254m â–„[48;5;186m [48;5;179m [38;5;186mâ–„â–„[38;5;185mâ–„ [38;5;186mâ–„â–„[48;5;186m [38;5;179mâ–„[48;5;179m  [48;5;136m[38;5;172mâ–„[48;5;58m[38;5;136mâ–„[48;5;16m [48;5;59m[38;5;232mâ–„[48;5;237m[38;5;235mâ–„[48;5;16m  [38;5;58mâ–„[48;5;52m[38;5;143mâ–„[48;5;136m[38;5;179mâ–„[48;5;179m [38;5;180mâ–„â–„      [48;5;178m[38;5;179mâ–„ [48;5;136m[38;5;172mâ–„â–„[48;5;178m [49m
\r            [38;5;187mâ–„[48;5;187m[38;5;223mâ–„[48;5;254m[38;5;253mâ–„[48;5;253m [48;5;187m[38;5;224mâ–„[48;5;223m[38;5;253mâ–„[48;5;222m[38;5;144mâ–„[38;5;143mâ–„[48;5;186mâ–„[38;5;144mâ–„[38;5;180mâ–„[48;5;180m [48;5;186m   [48;5;179m  [48;5;178m[38;5;179mâ–„â–„[48;5;137mâ–„[48;5;94mâ–„[48;5;95m[38;5;143mâ–„[48;5;58mâ–„[48;5;101m[38;5;179mâ–„[48;5;143mâ–„[48;5;180mâ–„ [48;5;186m[38;5;187mâ–„[48;5;187m [48;5;186mâ–„ [38;5;180mâ–„[48;5;180m[38;5;186mâ–„[48;5;186m [48;5;180mâ–„ [48;5;179m [48;5;178m[38;5;179mâ–„ [48;5;172m[38;5;178mâ–„[48;5;178m [48;5;179mâ–„[49m
\r           [38;5;180mâ–„[48;5;187m [48;5;223m[38;5;187mâ–„[48;5;187m [38;5;230mâ–„[38;5;243mâ–„[48;5;238m[38;5;16mâ–„[48;5;235mâ–„[48;5;236mâ–„[48;5;238mâ–„[48;5;235mâ–„[48;5;58mâ–„[48;5;144m[38;5;233mâ–„[48;5;186m[38;5;187mâ–„â–„â–„[48;5;180m[38;5;186mâ–„[48;5;179m[38;5;180mâ–„  [38;5;186mâ–„â–„â–„ [38;5;180mâ–„â–„â–„[48;5;186m [48;5;187m   [48;5;186m[38;5;187mâ–„[48;5;180mâ–„[48;5;186mâ–„   [48;5;180m [48;5;179m  [48;5;178m [38;5;179mâ–„â–„[48;5;180mâ–„[49m
\r           [48;5;180m[38;5;187mâ–„[48;5;187m[38;5;223mâ–„  [48;5;254m[38;5;187mâ–„[48;5;102m[38;5;241mâ–„[48;5;16m       [48;5;144m[38;5;248mâ–„[48;5;187m  [48;5;186m[38;5;187mâ–„ [48;5;180m [38;5;186mâ–„[48;5;186m [48;5;187m    [48;5;186m[38;5;187mâ–„â–„[48;5;187m  [38;5;186mâ–„â–„â–„â–„[48;5;186m [38;5;180mâ–„â–„â–„[48;5;180m [38;5;179mâ–„[48;5;179m[38;5;178mâ–„[48;5;178m  [38;5;179mâ–„[48;5;179m [49m
\r           [48;5;187m[38;5;186mâ–„   [48;5;250m[38;5;144mâ–„[48;5;101m[38;5;95mâ–„[48;5;16m[38;5;232mâ–„    [38;5;238mâ–„[48;5;241m[38;5;102mâ–„[48;5;145m[38;5;144mâ–„[48;5;144m [38;5;180mâ–„[38;5;186mâ–„[48;5;180m [48;5;179m [48;5;180m [48;5;186m[38;5;187mâ–„[48;5;187m  [38;5;186mâ–„    â–„â–„â–„[48;5;186m[38;5;180mâ–„[48;5;180m [38;5;179mâ–„ â–„[48;5;179m   [48;5;172m[38;5;136mâ–„[48;5;136m[38;5;172mâ–„[48;5;178m  [48;5;179m[38;5;178mâ–„ [49m
\r           [48;5;186m [48;5;187m   [48;5;144m [48;5;59m[38;5;95mâ–„[48;5;235m[38;5;233mâ–„[48;5;16m  [38;5;232mâ–„â–„[48;5;238m[38;5;58mâ–„[48;5;102m[38;5;101mâ–„[48;5;138m[38;5;144mâ–„[48;5;144m [38;5;143mâ–„[48;5;179mâ–„  [48;5;180m[38;5;179mâ–„    [48;5;186m[38;5;180mâ–„â–„[48;5;180m    [38;5;179mâ–„ [48;5;179m[38;5;180mâ–„â–„[48;5;180m  [38;5;179mâ–„[48;5;179m [48;5;178m[38;5;142mâ–„[48;5;136m  [48;5;178m [38;5;136mâ–„ [49m
\r           [48;5;186m [48;5;187m    [48;5;137m[38;5;144mâ–„[48;5;16m[38;5;58mâ–„     [48;5;94m[38;5;16mâ–„[48;5;137m[38;5;58mâ–„[48;5;143m[38;5;101mâ–„â–„[38;5;94mâ–„[38;5;58mâ–„[38;5;52mâ–„[48;5;137m[38;5;58mâ–„[48;5;143m [48;5;180m[38;5;143mâ–„ [38;5;179mâ–„[48;5;179m [38;5;180mâ–„[48;5;180m   [48;5;179mâ–„[48;5;180m [38;5;186mâ–„[48;5;186m  [48;5;180mâ–„ [38;5;179mâ–„[48;5;179m [48;5;178m [48;5;136m[38;5;172mâ–„[48;5;178mâ–„[48;5;172m [38;5;178mâ–„[48;5;178m [49m
\r            [48;5;187m   [48;5;186m[38;5;187mâ–„ [48;5;143m[38;5;180mâ–„[48;5;58m[38;5;137mâ–„[48;5;232m[38;5;94mâ–„[48;5;16mâ–„â–„â–„â–„[38;5;58mâ–„â–„[48;5;232m[38;5;94mâ–„[48;5;16mâ–„[48;5;232m[38;5;100mâ–„[48;5;58m[38;5;136mâ–„[48;5;101m[38;5;143mâ–„[48;5;143m[38;5;180mâ–„[48;5;179mâ–„  [48;5;180m          [38;5;179mâ–„â–„[48;5;179m [48;5;178m[38;5;172mâ–„[48;5;136m  [48;5;172m[38;5;136mâ–„[48;5;136m [48;5;172mâ–„[49m
\r           [38;5;223mâ–„[48;5;223m [48;5;187m  [38;5;186mâ–„[48;5;186m  [48;5;180mâ–„[48;5;137m[38;5;180mâ–„[48;5;100m[38;5;179mâ–„[48;5;137mâ–„â–„[48;5;143mâ–„[48;5;137mâ–„â–„[48;5;136mâ–„[48;5;137mâ–„[48;5;143mâ–„[48;5;179m        [48;5;180m   [38;5;186mâ–„  [38;5;179mâ–„â–„[48;5;179m [38;5;178mâ–„[48;5;178m[38;5;172mâ–„[48;5;172m[38;5;136mâ–„[48;5;178m[38;5;172mâ–„[48;5;136mâ–„  [49m
\r            [48;5;223m  [48;5;187m[38;5;186mâ–„â–„[48;5;186m   [38;5;180mâ–„â–„[48;5;179m        [48;5;143m[38;5;179mâ–„â–„[48;5;179m[38;5;143mâ–„[48;5;143m[38;5;179mâ–„[48;5;179m [38;5;180mâ–„[48;5;180m    [48;5;186mâ–„[48;5;180m  [38;5;179mâ–„[48;5;179m  [38;5;178mâ–„[48;5;172mâ–„[48;5;136m[38;5;172mâ–„[48;5;172m[38;5;136mâ–„â–„[48;5;136m[38;5;130mâ–„ [49m
\r             [38;5;223mâ–€[48;5;186m [38;5;179mâ–„[38;5;180mâ–„  [48;5;180m [38;5;179mâ–„[48;5;179m  [48;5;180mâ–„[48;5;179m   [48;5;143mâ–„[48;5;179m      [48;5;180m   [48;5;186m[38;5;180mâ–„[48;5;180m [38;5;179mâ–„[48;5;179m [38;5;180mâ–„   [48;5;178m[38;5;179mâ–„ [48;5;136m[38;5;172mâ–„  [48;5;130m[38;5;136mâ–„[49mâ–€
\r               [38;5;180mâ–€[48;5;179m[38;5;185mâ–„  [48;5;180m[38;5;179mâ–„[48;5;179m           [48;5;143mâ–„[48;5;179m  [48;5;180mâ–„[48;5;179m[38;5;143mâ–„[48;5;180m[38;5;179mâ–„[48;5;179m   [38;5;180mâ–„[48;5;180m[38;5;179mâ–„[48;5;179m    [48;5;178m [48;5;136m[38;5;172mâ–„  [49m
\r                 [38;5;179mâ–€â–€[48;5;179m    [38;5;142mâ–„  â–„[38;5;136mâ–„[38;5;142mâ–„[48;5;143mâ–„â–„â–„[38;5;136mâ–„ [38;5;142mâ–„[48;5;136m[38;5;143mâ–„[48;5;143m [48;5;179m[38;5;180mâ–„         [49m[38;5;178mâ–€â–€
\r                       [38;5;136mâ–€â–€[38;5;142mâ–€[38;5;136mâ–€â–€â–€â–€â–€[38;5;143mâ–€â–€â–€[38;5;179mâ–€[38;5;180mâ–€â–€[39m
                    `);
                    this.ready = true;
                    this.writePrompt();
                    break;
                default:
                    this.println(
                        `${cmd} : command not found, type help to get help`,
                    );
                    this.ready = true;
                    this.child.underlying.scrollLines(1);
                    this.writePrompt();
            }
        } else {
            this.socket.emit({
                event: WebSocketOutgoingEvent.adminJoin,
                data: command,
            });
        }
    }

    println(line: string) {
        this.child.write(line + '\r\n');
    }

    adminJoin$ = this.socket.listenFor<boolean>(
        WebSocketIncomingEvent.adminLoggedIn,
    );

    commandResult$ = this.socket.listenFor<string>(
        WebSocketIncomingEvent.result,
    );
}
